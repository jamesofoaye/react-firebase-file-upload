{"version":3,"file":"index.modern.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/index.js"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import React, { useState, createContext, useContext, useEffect } from 'react'\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage'\n\n//Download URL context\nconst DownloadURLContext = createContext()\n\n//Download URL Context Provider\nexport const DownloadURLProvider = ({ children }) => {\n  const [downloadURL, setDownloadURL] = useState([])\n\n  return (\n    <DownloadURLContext.Provider value={{ downloadURL, setDownloadURL }}>\n      {children}\n    </DownloadURLContext.Provider>\n  )\n}\n\n// Hook to get the context\nexport const useDownloadURL = () => {\n  const { downloadURL, setDownloadURL } = useContext(DownloadURLContext)\n  return { downloadURL, setDownloadURL }\n}\n\n// File Upload Hook\nexport const useFileUpload = (storage, { accept, multiple, path }) => {\n  const [file, setFiles] = useState([])\n  const [uploadProgress, setUploadProgress] = useState({})\n  const [uploadStatus, setUploadStatus] = useState({})\n  const [downloadURL, setDownloadURL] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (!storage) {\n      return setErrorMessage('No firebase storage instance provided')\n    }\n\n    if (!path) {\n      return setErrorMessage('No path provided')\n    }\n\n    if (!accept) {\n      return setErrorMessage(\n        'No accepted file types provided, provide an array of file types you want to accept'\n      )\n    }\n\n    return setErrorMessage(null)\n  }, [storage, path, accept])\n\n  // disappear error message after 3 seconds if error message contains unsupported file type\n  useEffect(() => {\n    if (errorMessage?.includes('Unsupported file type')) {\n      const timer = setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n      return () => clearTimeout(timer)\n    }\n  }, [errorMessage])\n\n  /** onChange event to set selected files */\n  const onSelectFile = (event) => {\n    const selectedFiles = event.target.files\n    const selectedFilesArray = Array.from(selectedFiles)\n\n    //prevent selecting unsupported files\n    if (accept?.length > 0) {\n      const unsupportedFiles = selectedFilesArray.filter(\n        (file) => !accept.includes(file.type)\n      )\n\n      if (unsupportedFiles.length > 0) {\n        setErrorMessage(`Unsupported file type: ${unsupportedFiles[0].type}`)\n\n        const remainingFiles = selectedFilesArray.filter(\n          (file) => !unsupportedFiles.includes(file)\n        )\n\n        return setFiles((previousFile) => previousFile.concat(remainingFiles))\n      }\n\n      //prevent selecting multiple files if multiple is false\n      if (!multiple) {\n        return setFiles(selectedFilesArray.slice(0, 1))\n      }\n\n      return setFiles((previousFile) => previousFile.concat(selectedFilesArray))\n    }\n  }\n\n  // reset states when finished uploading\n  const onUploadComplete = () => {\n    setFiles([])\n    setUploadProgress({})\n    setUploadStatus({})\n    setErrorMessage('')\n  }\n\n  // upload files to firebase storage\n  const onUpload = async () => {\n    for (let i = 0; i < file.length; i++) {\n      const storageRef = ref(storage, `${path}/${file[i].name}`)\n\n      if (uploadStatus[file[i].name] === undefined) {\n        //enable loading\n        setLoading(true)\n\n        const uploadTask = uploadBytesResumable(storageRef, file[i])\n\n        uploadTask.on(\n          'state_changed',\n          (snapshot) => {\n            const progress =\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n\n            //upload progress for each file\n            setUploadProgress((prevProgress) => ({\n              ...prevProgress,\n              [file[i].name]: progress\n            }))\n\n            switch (snapshot.state) {\n              case 'paused':\n                console.log('Upload is paused')\n                break\n              case 'running':\n                console.log('Upload is running')\n                break\n            }\n          },\n          (error) => {\n            // A full list of error codes is available at\n            // https://firebase.google.com/docs/storage/web/handle-errors\n            switch (error.code) {\n              case 'storage/unauthorized':\n                // User doesn't have permission to access the object\n                setErrorMessage(\n                  \"User doesn't have permission to access the object\"\n                )\n                setLoading(false)\n                break\n              case 'storage/canceled':\n                // User canceled the upload\n                setErrorMessage('User canceled the upload')\n                setLoading(false)\n                break\n\n              // ...\n\n              case 'storage/unknown':\n                // Unknown error occurred, inspect error.serverResponse\n                setErrorMessage(\n                  'Unknown error occurred, inspect error.serverResponse'\n                )\n                setLoading(false)\n                break\n            }\n          },\n          () => {\n            // Upload completed successfully, now we can get the download URL\n            getDownloadURL(uploadTask.snapshot.ref).then((download_url) => {\n              //download url for each file\n              setDownloadURL((prevURL) => [...prevURL, download_url])\n\n              //stop loading\n              setLoading(false)\n            })\n          }\n        )\n\n        //upload status\n        const state = (await uploadTask).state\n\n        setUploadStatus((prevStatus) => ({\n          ...prevStatus,\n          [file[i].name]: state\n        }))\n      }\n    }\n  }\n\n  // last element in the file array\n  const lastFile = file[file.length - 1]\n\n  /** Remove a file from preview */\n  const onRemove = (_file) => setFiles(file.filter((e) => e !== _file))\n\n  return {\n    /** Input type */\n    type: 'file',\n    /** Array of accepted files to select */\n    accept,\n    /** boolean to enable multiple file select */\n    multiple,\n    /** boolean to disabled input */\n    disabled: !storage || !path || !accept,\n    /** onChange event handler */\n    onChange: onSelectFile,\n    /** Array of files selected */\n    files: file,\n    /** boolean to indicate upload has started or not */\n    loading,\n    /** Error Message */\n    error: errorMessage,\n    /** Object of files and their upload progress */\n    progress: uploadProgress,\n    /** Object of files and their upload status */\n    status: uploadStatus,\n    /** Start Upload */\n    upload: onUpload,\n    /** Remove a file from preview */\n    remove: onRemove,\n    /** Reset all states when all upload is completed */\n    uploadComplete: onUploadComplete,\n    /** Array of Download URL for each uploaded file */\n    downloadURL,\n    /** boolean to indicate whether all files has been uploaded succesfully */\n    isCompleted: uploadStatus[lastFile?.name] === 'success'\n  }\n}\n"],"names":["DownloadURLContext","createContext","DownloadURLProvider","children","useState","downloadURL","setDownloadURL","useDownloadURL","useContext","useFileUpload","storage","accept","multiple","path","file","setFiles","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","errorMessage","setErrorMessage","loading","setLoading","useEffect","includes","timer","setTimeout","clearTimeout","onSelectFile","event","selectedFiles","target","files","selectedFilesArray","Array","from","length","unsupportedFiles","filter","type","remainingFiles","previousFile","concat","slice","onUploadComplete","onUpload","i","storageRef","ref","name","undefined","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","prevProgress","state","console","log","error","code","getDownloadURL","then","download_url","prevURL","prevStatus","lastFile","onRemove","_file","e","disabled","onChange","status","upload","remove","uploadComplete","isCompleted"],"mappings":"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"}